# -*- coding: utf-8 -*-
"""Atividade_1_IA_parte_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wI4taucobDZplrww8mj5nzihwRcHfCZV

##Atividade 1
##Aluno: Matheus da Silva Nascimento
"""

from sklearn import tree
from sklearn.model_selection import train_test_split
from sklearn import metrics

import pandas as pd

#Descobrir pokemons lendários a partir
#https://github.com/MainakRepositor/Datasets/blob/master/Pokemon.csv

url= "https://raw.githubusercontent.com/jbrownlee/Datasets/master/wine.csv"

#Carregar base de dados
#DataFrame
dataset = pd.read_csv(url, header = None, skiprows=1) #leitura pulando a primeira linha que é um abeçalho. QUnado não tem cabeçalho retira o skiprows

colunas=len(dataset.columns)

y=dataset[colunas-1] #extrai a última coluna que é a classe (o pokemon é lendário ou não)
X=dataset.loc[:,4:colunas-2] #O primeiro par ordenado diz respeito as linas
#dataset

#80% treino e 20% teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=None, stratify=y)

#Treinamento da arvore de decisão
model=tree.DecisionTreeClassifier(criterion='entropy', max_depth= 4)
model=model.fit(X_train, y_train)

#Predição e Resultados

resultado=model.predict(X_test)
acc=metrics.accuracy_score(resultado, y_test)
mostrar=round(acc*100)

print("{}%".format(mostrar))
print(list(resultado))
print(list(y_test))

tree.plot_tree(model, filled=True)